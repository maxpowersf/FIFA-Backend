// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ranking.Data;

namespace Ranking.Data.Migrations
{
    [DbContext(typeof(RankingContext))]
    [Migration("20190730202916_Revert Confederation entity")]
    partial class RevertConfederationentity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ranking.Data.Entities.Confederations", b =>
                {
                    b.Property<int>("ConfederationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<string>("Name");

                    b.Property<decimal>("Weight");

                    b.HasKey("ConfederationID");

                    b.ToTable("Confederations");
                });

            modelBuilder.Entity("Ranking.Data.Entities.MatchTypes", b =>
                {
                    b.Property<int>("MatchTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<decimal>("Weight");

                    b.HasKey("MatchTypeID");

                    b.ToTable("MatchTypes");
                });

            modelBuilder.Entity("Ranking.Data.Entities.Rankings", b =>
                {
                    b.Property<int>("RankingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Points");

                    b.Property<int>("TeamID");

                    b.Property<int>("Year");

                    b.HasKey("RankingID");

                    b.HasIndex("TeamID");

                    b.ToTable("Rankings");
                });

            modelBuilder.Entity("Ranking.Data.Entities.Teams", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActualRank");

                    b.Property<int>("ConfederationID");

                    b.Property<int>("HighestRank");

                    b.Property<int>("LowestRank");

                    b.Property<string>("Name");

                    b.Property<decimal>("TotalPoints");

                    b.HasKey("TeamID");

                    b.HasIndex("ConfederationID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Ranking.Data.Entities.Rankings", b =>
                {
                    b.HasOne("Ranking.Data.Entities.Teams", "Team")
                        .WithMany("Rankings")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ranking.Data.Entities.Teams", b =>
                {
                    b.HasOne("Ranking.Data.Entities.Confederations", "Confederation")
                        .WithMany()
                        .HasForeignKey("ConfederationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
